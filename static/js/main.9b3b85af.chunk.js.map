{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","TodoList","todos","map","getUserId","userId","usersFromServer","find","getTodos","App","useState","setTodos","todoTitle","setTodoTitle","selectUser","setSelectUser","isErrorUser","setIsErrorUser","isErrorTitle","setIsErrorTitle","maxId","length","Math","max","handleChange","event","target","value","filteredValue","replace","filterInputValue","Number","action","method","onSubmit","preventDefault","newTodo","type","onChange","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"uPAAe,GACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,2B,eCnDEC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACvC,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,EAAKF,OAA7C,SACGE,EAAKJ,QCDGO,G,MAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExCT,EAIES,EAJFT,GACAU,EAGED,EAHFC,MACAC,EAEEF,EAFFE,UACAN,EACEI,EADFJ,KAGF,OACE,0BACE,UAASL,EACTM,UAAWK,EAAY,+BAAiC,WAF1D,UAIE,oBAAIL,UAAU,kBAAd,SACGI,IAGFL,GAAQ,cAAC,EAAD,CAAUA,KAAMA,SClBlBO,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,yBAASP,UAAU,WAAnB,SACGO,EAAMC,KAAI,SAACL,GAAD,OACT,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKT,U,MCH1B,SAASe,EAAUC,GAGjB,OAFkBC,EAAgBC,MAAK,SAAAb,GAAI,OAAIA,EAAKL,KAAOgB,MAEvC,KAGtB,IAAMG,ECdS,CACb,CACEnB,GAAI,EACJU,MAAO,qBACPC,WAAW,EACXK,OAAQ,GAEV,CACEhB,GAAI,GACJU,MAAO,kBACPC,WAAW,EACXK,OAAQ,GAEV,CACEhB,GAAI,EACJU,MAAO,qCACPC,WAAW,EACXK,OAAQ,IDH6BF,KAAI,SAAAL,GAAI,kCAC5CA,GAD4C,IAE/CJ,KAAMU,EAAUN,EAAKO,aAOhB,IAAMI,EAAM,WACjB,MAA0BC,mBAASF,GAAnC,mBAAON,EAAP,KAAcS,EAAd,KACA,EAAkCD,mBAAS,IAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAoCH,mBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAAsCL,oBAAS,GAA/C,mBAAOM,EAAP,KAAoBC,EAApB,KACA,EAAwCP,oBAAS,GAAjD,mBAAOQ,EAAP,KAAqBC,EAArB,KACMC,EAAQlB,EAAMmB,OAAS,EACzBC,KAAKC,IAAL,MAAAD,KAAI,YAAQpB,EAAMC,KAAI,SAAAL,GAAI,OAAIA,EAAKT,QAAO,EAC1C,EA8BEmC,EAAe,SACnBC,GAEA,MAAwBA,EAAMC,OAAtBpC,EAAR,EAAQA,KAAMqC,EAAd,EAAcA,MAEd,GAAa,UAATrC,EAAkB,CACpB,IAAMsC,EAhDZ,SAA0BD,GACxB,OAAOA,EAAME,QAAQ,4CAAyB,IA+CpBC,CAAiBH,GAEvCd,EAAae,GACbT,GAAgB,GAGL,SAAT7B,IACFyB,EAAcgB,OAAOJ,IACrBV,GAAe,KAInB,OACE,sBAAKtB,UAAU,MAAf,UACE,+CAEA,uBACEqC,OAAO,aACPC,OAAO,OACPC,SArDe,SAACT,GAWpB,GAVAA,EAAMU,iBAEDvB,GACHO,GAAgB,GAGbL,GACHG,GAAe,GAGbH,GAAcF,EAAW,CAC3B,IAAMwB,EAAgB,CACpB/C,GAAI+B,EACJrB,MAAOa,EACPP,OAAQS,EACRd,WAAW,EACXN,KAAMU,EAAUU,IAGlBH,EAAS,GAAD,mBAAKT,GAAL,CAAYkC,KACpBvB,EAAa,IACbE,EAAc,GACdE,GAAe,GACfE,GAAgB,KA0BhB,UAKE,sBAAKxB,UAAU,QAAf,mBAEG,IACD,uBACE0C,KAAK,OACL/C,KAAK,QACLqC,MAAOf,EACP0B,SAAUd,EACV,UAAQ,aACRe,YAAY,kBAEbrB,GAAgB,sBAAMvB,UAAU,QAAhB,qCAGnB,sBAAKA,UAAU,QAAf,kBAEG,IACD,yBACEL,KAAK,OACLqC,MAAOb,EACPwB,SAAUd,EACV,UAAQ,aAJV,UAME,wBACEgB,UAAQ,EACRb,MAAO,EAFT,2BAMCrB,EAAgBH,KAAI,SAAAT,GAAI,OACvB,wBAAsBiC,MAAOjC,EAAKL,GAAlC,SACGK,EAAKJ,MADKI,EAAKL,UAKrB2B,GAAe,sBAAMrB,UAAU,QAAhB,qCAGlB,wBAAQ0C,KAAK,SAAS,UAAQ,eAA9B,oBAKF,cAAC,EAAD,CAAUnC,MAAOA,QEhIvBuC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9b3b85af.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={completed ? 'TodoInfo TodoInfo--completed' : 'TodoInfo'}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map((todo) => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport './App.scss';\n\nfunction getUserId(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst getTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserId(todo.userId),\n}));\n\nfunction filterInputValue(value: string): string {\n  return value.replace(/[^a-zA-Zа-яА-Я0-9\\s]/g, '');\n}\n\nexport const App = () => {\n  const [todos, setTodos] = useState(getTodos);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [selectUser, setSelectUser] = useState(0);\n  const [isErrorUser, setIsErrorUser] = useState(false);\n  const [isErrorTitle, setIsErrorTitle] = useState(false);\n  const maxId = todos.length > 0\n    ? Math.max(...todos.map(todo => todo.id)) + 1\n    : 1;\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!todoTitle) {\n      setIsErrorTitle(true);\n    }\n\n    if (!selectUser) {\n      setIsErrorUser(true);\n    }\n\n    if (selectUser && todoTitle) {\n      const newTodo: Todo = {\n        id: maxId,\n        title: todoTitle,\n        userId: selectUser,\n        completed: false,\n        user: getUserId(selectUser),\n      };\n\n      setTodos([...todos, newTodo]);\n      setTodoTitle('');\n      setSelectUser(0);\n      setIsErrorUser(false);\n      setIsErrorTitle(false);\n    }\n  };\n\n  const handleChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    const { name, value } = event.target;\n\n    if (name === 'title') {\n      const filteredValue = filterInputValue(value);\n\n      setTodoTitle(filteredValue);\n      setIsErrorTitle(false);\n    }\n\n    if (name === 'user') {\n      setSelectUser(Number(value));\n      setIsErrorUser(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          Title:\n          {' '}\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={todoTitle}\n            onChange={handleChange}\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n          />\n          {isErrorTitle && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          User:\n          {' '}\n          <select\n            name=\"user\"\n            value={selectUser}\n            onChange={handleChange}\n            data-cy=\"userSelect\"\n          >\n            <option\n              disabled\n              value={0}\n            >\n              Choose a user\n            </option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {isErrorUser && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}