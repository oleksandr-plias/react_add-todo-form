{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","TodoList","todos","map","App","getUserId","usersFromServer","find","getTodos","todosFromServer","useState","setTodos","todoTitle","setTodoTitle","selectedUserId","setSelectedUserId","isErrorUser","setIsErrorUser","isErrorTitle","setIsErrorTitle","maxId","useMemo","length","Math","max","handleChange","event","target","value","filteredValue","replace","filterInputValue","Number","action","method","onSubmit","preventDefault","newTodo","prevTodos","type","onChange","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.298eaa1c.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={completed ? 'TodoInfo TodoInfo--completed' : 'TodoInfo'}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map((todo) => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","import React, { useState, useMemo } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport './App.scss';\n\nexport const App = () => {\n  function getUserId(userId: number): User | null {\n    const foundUser = usersFromServer.find(user => user.id === userId);\n\n    return foundUser || null;\n  }\n\n  const getTodos: Todo[] = todosFromServer.map(todo => ({\n    ...todo,\n    user: getUserId(todo.userId),\n  }));\n\n  function filterInputValue(value: string): string {\n    return value.replace(/[^a-zA-Zа-яА-Я0-9\\s]/g, '');\n  }\n\n  const [todos, setTodos] = useState(getTodos);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState<number | null>(null);\n  const [isErrorUser, setIsErrorUser] = useState(false);\n  const [isErrorTitle, setIsErrorTitle] = useState(false);\n  const maxId = useMemo(() => {\n    return todos.length > 0\n      ? Math.max(...todos.map(todo => todo.id)) + 1\n      : 1;\n  }, [todos]);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!todoTitle) {\n      setIsErrorTitle(true);\n    }\n\n    if (!selectedUserId) {\n      setIsErrorUser(true);\n    }\n\n    if (selectedUserId !== null && todoTitle) {\n      const newTodo: Todo = {\n        id: maxId,\n        title: todoTitle,\n        userId: selectedUserId,\n        completed: false,\n        user: getUserId(selectedUserId),\n      };\n\n      setTodos(prevTodos => [...prevTodos, newTodo]);\n      setTodoTitle('');\n      setSelectedUserId(null);\n      setIsErrorUser(false);\n      setIsErrorTitle(false);\n    }\n  };\n\n  const handleChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    const { name, value } = event.target;\n\n    if (name === 'title') {\n      const filteredValue = filterInputValue(value);\n\n      setTodoTitle(filteredValue);\n      setIsErrorTitle(false);\n    }\n\n    if (name === 'user') {\n      setSelectedUserId(value !== '0' ? Number(value) : null);\n      setIsErrorUser(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          Title:\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={todoTitle}\n            onChange={handleChange}\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            className=\"input-title\"\n          />\n          {isErrorTitle && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          User:\n          <select\n            name=\"user\"\n            value={selectedUserId !== null ? selectedUserId : '0'}\n            onChange={handleChange}\n            data-cy=\"userSelect\"\n            className=\"user-select\"\n          >\n            <option\n              disabled\n              value=\"0\"\n            >\n              Choose a user\n            </option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {isErrorUser && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}